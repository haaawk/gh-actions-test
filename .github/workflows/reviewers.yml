name: Add Author Info and FOO to PR Description
on:
    pull_request_review:
        types: [submitted]

permissions:
  pull-requests: write
  contents: read

jobs:
  add-info:
    runs-on: ubuntu-latest
    steps:
      - name: Update PR Description
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('Event name:', context.eventName);
            console.log('Review state:', context.payload.review?.state);
            
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            console.log('Current PR body:', pr.data.body);

            let updatedBody = `${pr.data.body}`;
            if (context.eventName === 'pull_request_review' && 
                context.payload.review.state.toUpperCase() === 'APPROVED') {
              console.log('Processing approved review');
              const reviewer = context.payload.review.user;
              console.log('Reviewer:', reviewer.login);
              
              const reviewerDetails = await github.rest.users.getByUsername({
                username: reviewer.login
              });
              console.log('Reviewer details:', reviewerDetails.data.name);

              // Get reviewer's recent commits to fetch email
              const recentCommits = await github.rest.repos.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                author: reviewer.login,
                per_page: 1
              });
              console.log('Found reviewer commits:', recentCommits.data.length);

              const reviewerEmail = recentCommits.data[0]?.commit?.author?.email || 'Not available';
              console.log('Reviewer email:', reviewerEmail);
              
              const reviewerInfo = `
              Approved by: ${reviewerDetails.data.name || 'Name not provided'} <${reviewerEmail}>(@${reviewer.login})
              `;
              console.log('Adding reviewer info:', reviewerInfo);
                
              updatedBody = `${pr.data.body || ''}\n\n${reviewerInfo}`;
            } else {
              console.log('Review not approved or wrong event type');
            }
            
            console.log('Final body:', updatedBody);
            
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: updatedBody
            });
            
            console.log('PR description updated successfully');
